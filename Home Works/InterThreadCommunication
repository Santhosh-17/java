class Q
{
	int n;
	boolean valueset = false;
	
	synchronized void put(int num)
	{
		while(valueset)
		{
			try{ wait(); }catch(InterruptedException e){}
		}
		n = num;
		System.out.println("Put :"+n);
		valueset = true;
		notify();
	}
	synchronized void get()
	{
		while(!valueset)
		{
			try{ wait(); }catch(InterruptedException e){}
		}
		System.out.println("Get :"+n);
		valueset = false;
		notify();
}
}
class Producer implements Runnable
{
	Q q;
	Producer(Q q)
	{
		this.q = q;
		Thread t = new Thread(this,"Producer");
		t.start();		
	}
	public void run()
	{
		int i=0;
		while(true)
		{
			q.put(i++);
			try{ Thread.sleep(1000); }catch(InterruptedException e){}
		}
	}
}
class Consumer implements Runnable
{
	Q q;
	Consumer(Q q)
	{
		this.q = q;
		Thread t = new Thread(this,"Consumer");
		t.start();		
	}
	public void run()
	{
		int i=0;
		while(true)
		{
			q.get();
			try{ Thread.sleep(100); }catch(InterruptedException e){}
		}
	}
}
public class InterThreadCommunication
{
	public static void main(String[] args)
	{
		Q q = new Q();
		new Producer(q);
		new Consumer(q);
	}
}
